name: Deploy Django to GCP VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.GCP_VM_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to VM
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_IP }} << 'EOF'
            export APP_DIR="/home/${{ secrets.GCP_VM_USER }}/swe_django_app"
            export REPO_URL=https://github.com/EshanJayasundara/Django-Web-App-for-SweBench-Evaluation.git
            export DEBUG="${{ secrets.DEBUG }}"
            export DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}"
            export DJANGO_SUPERUSER_EMAIL="${{ secrets.DJANGO_SUPERUSER_EMAIL }}"
            export DJANGO_SUPERUSER_USERNAME="${{ secrets.DJANGO_SUPERUSER_USERNAME }}"
            export DJANGO_SUPERUSER_PASSWORD="${{ secrets.DJANGO_SUPERUSER_PASSWORD }}" 

            # Check if directory exists
            if [ ! -d "$APP_DIR" ]; then
              echo "Cloning the repository..."
              git clone $REPO_URL $APP_DIR
              # Continue with deployment
              cd $APP_DIR
              echo "Creating venv..."
              python3 -m venv .venv
              echo "Activating venv..."
              source .venv/bin/activate
              echo "Installing dependencies..."
              pip3 install -e .
              python manage.py migrate
              python manage.py collectstatic --noinput
              python manage.py createsuperuser --noinput
              python manage.py runserver
            else
              echo "Repository already cloned. Pulling latest changes..."
              cd $APP_DIR
              git pull origin main
              # Continue with deployment
              cd $APP_DIR
              echo "Activating existing venv..."
              python manage.py runserver
            fi

            # Continue with deployment
            cd $APP_DIR
            echo "Creating venv..."
            python3 -m venv .venv
            echo "Activating venv..."
            source .venv/bin/activate
            echo "Installing dependencies..."
            pip3 install -e .
            python manage.py migrate
            python manage.py createsuperuser --noinput
            python manage.py runserver
          EOF
